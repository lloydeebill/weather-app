(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>d});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),c=t(417),s=t.n(c),u=new URL(t(822),t.b),l=i()(o()),A=s()(u);l.push([e.id,`*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: Helvetica, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nmain {\n  width: 100%;\n  height: 100vh;\n  background-image: url(${A});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n/*upper-content*/\n\n.upper-content {\n  height: 55%;\n  border: 1px solid pink;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 3fr 1fr 2fr;\n}\n\n.weather-info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}\n\n.weather-title {\n  font-size: 40px;\n}\n\n.weather-location {\n  font-size: 70px;\n}\n\n.weather-temp {\n  font-size: 60px;\n}\n\n.weather-details {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n\n}\n\n\n\n.lower-content {\n  height: 45;\n  border: 1px solid blue;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,mCAAmC;AACrC;;AAEA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;;;;EAOE,yBAAyB;AAC3B;;AAEA;;EAEE,kBAAkB;AACpB;;;AAGA;EACE,gBAAgB;AAClB;;AAEA;EACE;AACF;;AAEA;;EAEE,aAAa;AACf;;;AAGA;EACE,WAAW;EACX,aAAa;EACb,yDAA8C;EAC9C,4BAA4B;EAC5B,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA,gBAAgB;;AAEhB;EACE,WAAW;EACX,sBAAsB;EACtB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kCAAkC;AACpC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;;AAEX;;;;AAIA;EACE,UAAU;EACV,sBAAsB;AACxB",sourcesContent:["*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: Helvetica, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\nhtml,\nbody {\n  height: 100vh;\n}\n\n\nmain {\n  width: 100%;\n  height: 100vh;\n  background-image: url(/src/images/bg-img.webp);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n/*upper-content*/\n\n.upper-content {\n  height: 55%;\n  border: 1px solid pink;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: 3fr 1fr 2fr;\n}\n\n.weather-info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}\n\n.weather-title {\n  font-size: 40px;\n}\n\n.weather-location {\n  font-size: 70px;\n}\n\n.weather-temp {\n  font-size: 60px;\n}\n\n.weather-details {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n\n}\n\n\n\n.lower-content {\n  height: 45;\n  border: 1px solid blue;\n}"],sourceRoot:""}]);const d=l},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},417:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],u=r.base?s[0]+r.base:s[0],l=a[u]||0,A="".concat(u," ").concat(l);a[u]=l+1;var d=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var h=o(p,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),u=0;u<a.length;u++){var l=t(a[u]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},822:(e,n,t)=>{e.exports=t.p+"img/bg-img.webp"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),o=t.n(r),a=t(825),i=t.n(a),c=t(659),s=t.n(c),u=t(56),l=t.n(u),A=t(540),d=t.n(A),p=t(113),h=t.n(p),f=t(208),m={};m.styleTagTransform=h(),m.setAttributes=l(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=d(),o()(f.A,m),f.A&&f.A.locals&&f.A.locals;const y=new class{constructor(){this.weatherData=null}async fetchWeather(e){try{const n=await fetch(`http://api.weatherapi.com/v1/forecast.json?key=5d1aa864e5a04bd48ed143546241807&q=${e}`,{mode:"cors"});if(!n.ok)throw new Error("Could not fetch source");return this.weatherData=await n.json(),this.weatherData}catch(e){console.error(e)}}todayWeather(e){document.querySelector(".weather-title").innerText=`${this.weatherData.current.condition.text}`,document.querySelector(".weather-location").innerText=`${this.weatherData.location.name}`;let n="metric"===e?"째C":"째F",t="metric"===e?this.weatherData.current.temp_c:this.weatherData.current.temp_f;document.querySelector(".weather-temp").innerText=`${t} ${n}`;let r="metric"===e?"째C":"째F",o="metric"===e?this.weatherData.current.feelslike_c:this.weatherData.current.feelslike_f;document.querySelector(".feels-like").innerText=`Feels like: ${o} ${r}`;let a="metric"===e?"kph":"mph",i="metric"===e?this.weatherData.current.wind_kph:this.weatherData.current.wind_mph;document.querySelector(".wind").innerText=`Wind: ${i} ${a}`,document.querySelector(".humidity").innerText=`Humidity: ${this.weatherData.current.humidity}%`}},g=new class{updateTodayWeather(e,n){document.querySelector(".weather-title").innerText=`${e.current.condition.text}`,document.querySelector(".weather-location").innerText=`${e.location.name}`;let t="metric"===n?"째C":"째F",r="metric"===n?e.current.temp_c:e.current.temp_f;document.querySelector(".weather-temp").innerText=`${r} ${t}`;let o="metric"===n?"째C":"째F",a="metric"===n?e.current.feelslike_c:e.current.feelslike_f;document.querySelector(".feels-like").innerText=`Feels like: ${a} ${o}`;let i="metric"===n?"kph":"mph",c="metric"===n?e.current.wind_kph:e.current.wind_mph;document.querySelector(".wind").innerText=`Wind: ${c} ${i}`,document.querySelector(".humidity").innerText=`Humidity: ${e.current.humidity}%`}};async function E(e){try{const n=await y.fetchWeather(e);g.updateTodayWeather(n,"metric")}catch(e){console.error("Failed to fetch weather data",e)}}document.addEventListener("DOMContentLoaded",(()=>{!function(){const e=document.querySelector(".fahr-button"),n=document.querySelector(".cels-button"),t=document.querySelector(".search-button");e.addEventListener("click",(()=>{g.updateTodayWeather(y.weatherData,"imperial")})),n.addEventListener("click",(()=>{g.updateTodayWeather(y.weatherData,"metric")})),t.addEventListener("click",(async()=>{const e=document.querySelector(".search-input").value;e?await E(e):alert("Please enter a location")}))}(),E("Butuan City")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,